#+TITLE: README
#+bibliography: cite.bib



* COMMENT Meta
#+begin_src plantuml
left to right direction
actor User
actor Server
actor paymentService as "Payment Service"

rectangle "Main Screen"{
        usecase createAccount as "Create Account"

        User --> createAccount
        createAccount ..> (Become Subscriber)  : <<extends>>
        createAccount ..> (Free Account)  : <<extends>>

        createAccount <--- Server
        (Become Subscriber) <-- paymentService

}
#+end_src
* Use Case Diagrams
Syntax used in /Description/ is Martin Fowler's style [cite:@distilled Figure: 9.1    ]

#+begin_src plantuml
left to right direction
actor User
actor Server
actor paymentService as "Payment Service"

rectangle "Main Screen"{
        usecase createAccount as "Create Account"
        usecase renew as "Renew Subscription"

        User --> createAccount

        createAccount ..> (Become Subscriber)  : <<extends>>
        createAccount ..> (Free Account)  : <<extends>>

        createAccount <--- Server
        (Become Subscriber) <-- paymentService

        User --> renew
        renew <-- paymentService

}
#+end_src

#+RESULTS:
[[file:/tmp/babel-vs0Y13/plantuml-9PMc3d.png]]

** Create Account
*** Description
Goal Level: Sea Level \\
Main Success Scenario: \\

1. User interacts with =Become Subscriber= component (button etc..)
2. User fills form
3. _Relevant checks are done_
4. Account has created, user has notified
5. Popup/Window will closed/hidden

Extensions:  \\
3a: Free account request
        Server checks account subscription request
3b: Subscription request
        Both server and 3rd party payment service checks request
** Renew Subscription
Goal Level: Sea Level \\
Main Success Scenario: \\

1. User interacts with =Renew Subscriber= component (button etc..)
2. 3rd party payment handles payment
3. Give feedback about status of payment

Extensions:  \\
2a: Error in payment
    - Not enough money
    - Authentication problems
    - ...
